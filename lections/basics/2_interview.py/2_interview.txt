Ice Ventura, [25.11.22 08:40]
Файлы
1. зачем использовать конструкцию with open?
встроена try-finally. закрывает даже если есть ошибка
2. какие режимы открытия существуют? (r,w,append,b,r+,w+)
3. какими методами можно записывать данные? (r+,w,append)
4. В чем отличие read, readlines, readline? 
read - текст (чило - количество символов)
readlines - список (ск строк считывает)
readline - построчно
5. что такое seek? - передвижение каретки на определенную позицию

Decorators
1. Функция высшего порядка ( функция принимает в аргументы, возвращает, создает, вызывает)
2. для чего нужна внутренняя функция wrapper?
чтобы принять аргументы в декорированную функцию 
wrapper - итоговая функция
3. как сделать так, чтобы декоратор принимал аргументы - обернуть во внешнюю функцию

def decor(num):    
    def inner_decor(fun):
        def wrapper(*a,**k):
            func(*a,**k)
        return wrapper
@decor(5)
def func():
    ...

ООП
1. что такое ООП? - парадигма - опреденный способ видения задачи. Построено на объектах и их взаимосвязи (методы, gettr,settr)
2. какие принципы ООП существуют? (7 принципов - инкапсуляция, наследование, полиморфизм, ассоциация, агрегация ....)
3. что такое наследование(множественное), инкапсуляция, полиморфизм?
4. дайте определение класс, объект, аттрибуты, методы
класс - шаблон
объект - реализация шаблона
5. какие правила наименования классов существуют по PEP8 
pep8 - синтаксис написания 
hello_world = ''
class HelloWorld:
    ...
6. проблемы множественного наследования:
проблема ромба - решенная с помощью mro. (проблема возникала когда у родителей оин общий родитель)
перекрестная:
class C(A,B):...
class D(B,A):...
class E(C,D): Error
7. чем отличается  аттрибут класса от аттрибута экземпляра класса 
аттрибут класса  относятся к классу
аттрибут объект уникальны
class A:
    attr1 = 'Hello
a = A()
a.attr2  - личный аттрибут экземпляра (создаются в init)
a.attr1 - аттрибут класса
8. что такое self - это объект класса. это аргумент. ссылка на объект от этого класса
9. можно ли вызвать аттрибут класса через объект? да
можно ли вызвать аттрибут объекта через класс? нет
можно ли вызвать метод объекта через класс - можно если передать объект - да
class A:
    def method(self):
        return 5
obj = A()
obj.method()
A.method(obj)
10. от чего наследуются все классы в python? от класса OBJECT
11. что такое isinstance , issubclass
isinstance - принимает объект и класс, явл ли объектов от этого класса, выводит True/False
issubclass - принимает класс и класс, явл ли наследуемым от этого класса, выводит True/False
12.какие трактовки инкапсуляции существуют?
сбор и сокрытие
13.какие модификаторы доступа существуют?
protected,private,public
14. наследуются ли приватные аттрибуты? на уровне соглашения - да
15. как обратиться к приватному аттрибуту? 
class A:
    private = ''
obj = A()
obj._A__private

class B(A):
    ...
obj = B()
obj._A__private
16. что такое property? декоратор, кот из метода делает аттрибут
getter,setter,deleter - мы обращаемся к нему как к обычному аттрибуту
17. что такое mro - method resolution order - порядок поиска метода
class A:...
class B(A):..
class C(A):...
class D(B,C):...
A.mro -> [A,object]
B.mro -> [B,A, object]
C.mro -> [C,A, object]
D.mro -> [D, B, C, A, object]
18. что такое миксины - классы, от которых нельзя создавать объекты. это расширение функционала класса (неполные классы)
19. что такое магические методы
вызываются под капотом
20. что такое __new и init
new - создает объект
init - дополняет аттрибутами
21. в чем разница между str и repr?
str - оборачиваем в строку, принтим
repr
class A:
    def str(self):
        return "str"  
    def repr(self):
        return "repr"
22. что такое полиморфизм
примеры полиморфизма ( метод add,pop)
23. как можно получить доступ к аттрибутам или методам родительского класса ? (super)
24. почему стоит использовать super? действует по mro
- для переименования классов
- из-за множественного наследования 
25. что такое class, static, instance методы?
instance - сам объект и всего его методы
class - работа с классом, изменить аттрибуты класса
static  -  исп внутри класса

Ice Ventura, [25.11.22 08:40]
Postgresql
1. что такое база данных, СУБД  система управление (программа) базой данных
2. какие виды бд существуют (реляционные/нереляционные NoSQL)
sql - язык структурированных запросов
реляционные - Postgresql, sqlite3
нереляционные - mongodb? firebase
3. типы данных в psql (char,varchar)
varchar - только те, кот задали
char - занимать ровно столько памяти, сколько задали
4. в чем разница int от serial
serial - тот же тип данных  int , но генерирует следующее число последовательности
5. запись в таблицу (insert into)
6. что такое primary key, foreign key
primary key - на id - уникальные - строит бинарное дерево
foreign key - чтобы убедиться, что связь существует
7. какие виды связей существуют one to one,one to many, many to many
8. как реализуются связи 
one2one - на fk накладываем ограничение unique
one2many - fk
many2many - создаем третью таблицу, где будут fk на 1 таблицу и fk на 2 таблицу
9. что такое orm?
переводчик между питоном и sql
10. какие orm мы знаем
sqlalchemy, peewee

GIT

1. что такое git - система управления версиями
2. в чем разница  git и github
github - сайт... соцсеть для программистов
3. какие команды написать, чтобы залить первую версию
git init (создает папку .git для отслеживания)
git add .
git commit -m 'message'  (чтобы создать версию)

4. какие команды нужно написать, чтобы залить проект на github
copy ssh-key с github репозитория
git push ssh-key master

git remote add origin ssh-key (мы записываем ssh-key в переменную origin)
git push origin master